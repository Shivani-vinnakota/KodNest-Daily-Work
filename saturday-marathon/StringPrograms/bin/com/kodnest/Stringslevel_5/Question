
1)Remove Duplicates from a String

Removing Duplicate Characters from a String

Problem Statement:

Imagine you are working on a text processing system that needs to remove
 any redundant characters from given text strings. This feature will be 
 used to create cleaner text for documents, emails, and user input. 
 Write a function that takes a string and returns a new string with all
  duplicate characters removed, preserving only the first occurrence of 
  each character.
Sample Input 1:
"programming"
Sample Output 1:
"progamin"
Sample Input 2:
"apple"
Sample Output 2:
"aple"
Question Elaborated Explanation:
Removing duplicates from a string is a common operation in text processing
 applications, like search engines, data cleaning, and document formatting.
This task involves scanning a string and removing any character that has
 been seen before, preserving the original order of the characters.
 
 
 
 2)Replace Space with 99
Question Topic:
String Manipulation - Replacing Characters
Problem Statement:
A new data format requires you to write a method that replaces all 
spaces in a given string with the characters "99." This transformation 
will make the text compatible with a specific parsing system.
Sample Input 1:
"Welcome to the future"
Sample Output 1:
"Welcome99to99the99future"
Sample Input 2:
"Open AI rocks"
Sample Output 2:
"Open99AI99rocks"
Question Elaborated Explanation:
The task here is to replace all spaces in the given input string with 
the characters "99." This transformation is common in systems where spaces
 are used as delimiters, and an alternative representation is required to 
 handle spaces within the actual data.
 
 
 
3)Display All Substrings of a Given String
Question Topic:
String Manipulation - Displaying Substrings
Problem Statement:
You are creating a tool for a text processing application that requires
displaying all possible substrings of a given input string. Your
task is to write a function that takes an input string and prints all 
its substrings.
Sample Input 1:
"abc"
Sample Output 1:
a, b, c, ab, bc, abc
Sample Input 2:
"AI"
Sample Output 2:
A, I, AI
Question Elaborated Explanation:
A substring is a contiguous sequence of characters within a string. 
For a given string of length n, there are n(n+1)/2 substrings. 
Your task is to display all these substrings.

4)Finding the frequency of an every character in a string

5)Write a java Program to check if enetered 2 strings is anagram or not.
Eg:CAT
ACT
Are anagram
Eg2:RAMA
AMAR
Hint:
str1-->Rama
str2-->amar
//convert both strings to lower case
str1-->rama
str-->amar
//if lengths of strings are equal
arr1-->|r|a|m|a
arr2-->|a|m|a|r
//Sort these arrays
arr1-->|a|a|m|r
arr2-->|a|a|m|r
//compare every element of arr1 to arr2
print entered strings are anagram if every element matches
else
print they are not anagrams